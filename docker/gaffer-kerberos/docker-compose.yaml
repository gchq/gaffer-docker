# Copyright 2022 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.7"

networks:
  default:
    name: gaffer

services:

  kdc-server:
    image: gchq/kdc:0.1-alpha
    healthcheck:
      test: stat /proc/17/stat
      retries: 5
      interval: 1s
      timeout: 5s
    build:
      context: ./kdc
    container_name: kdc-server
    hostname: kdc-server
    environment:
      - HADOOP_PRINCIPLE=${HADOOP_PRINCIPLE}
      - HADOOP_KRB_PASSWORD=${HADOOP_KRB_PASSWORD}
      - ZOOKEEPER_PRINCIPLE=${ZOOKEEPER_PRINCIPLE}
      - ZOOKEEPER_KRB_PASSWORD=${ZOOKEEPER_KRB_PASSWORD}
      - ACCUMULO_PRINCIPLE=${ACCUMULO_PRINCIPLE}
      - ACCUMULO_KRB_PASSWORD=${ACCUMULO_KRB_PASSWORD}
      - REALM=${REALM}
    volumes:
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - ./kdc/conf/kdc.conf:/etc/kdc.conf:ro
      - /var/log/krb5

  hdfs-namenode:
    image: gchq/hdfs-krb:${HADOOP_VERSION}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9870 || exit 1"]
      retries: 5
      interval: 1s
      timeout: 5s
    build:
      context: ./hdfs-krb
      args:
        BASE_IMAGE_NAME: gchq/hdfs
        BASE_IMAGE_TAG: ${HADOOP_VERSION}
    command: namenode
    container_name: hdfs-namenode
    hostname: hdfs-namenode.gaffer
    depends_on:
      kdc-server:
        condition: service_healthy
    environment:
      - HADOOP_CONF_DIR=${HADOOP_CONF_DIR}
      - HADOOP_PRINCIPLE=${HADOOP_PRINCIPLE}
      - HADOOP_KRB_PASSWORD=${HADOOP_KRB_PASSWORD}
      - REALM=${REALM}
      - DEBUG=${DEBUG}
    ports:
      - 9870:9870
    volumes:
      - ./hdfs-krb/conf:${HADOOP_CONF_DIR}:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/hadoop
      - /data1
      - /data2

  hdfs-datanode:
    depends_on:
      hdfs-namenode:
        condition: service_healthy
    image: gchq/hdfs-krb:${HADOOP_VERSION}
    build:
      context: ./hdfs-krb
      args:
        BASE_IMAGE_NAME: gchq/hdfs
        BASE_IMAGE_TAG: ${HADOOP_VERSION}
    command: datanode
    container_name: hdfs-datanode
    hostname: hdfs-datanode.gaffer
    environment:
      - HADOOP_CONF_DIR=${HADOOP_CONF_DIR}
      - HADOOP_PRINCIPLE=${HADOOP_PRINCIPLE}
      - HADOOP_KRB_PASSWORD=${HADOOP_KRB_PASSWORD}
      - REALM=${REALM}
      - DEBUG=${DEBUG}
    volumes:
      - ./hdfs-krb/conf:${HADOOP_CONF_DIR}:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/hadoop
      - /data1
      - /data2

  zookeeper:
    depends_on:
      kdc-server:
        condition: service_healthy
    healthcheck:
      test: echo ruok | nc 127.0.0.1 2181 | grep imok
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    image: zookeeper:${ZOOKEEPER_VERSION}-krb
    build:
      context: ./zookeeper
      args:
        BASE_IMAGE_NAME: zookeeper
        BASE_IMAGE_TAG: ${ZOOKEEPER_VERSION}
    container_name: zookeeper
    hostname: zookeeper
    environment:
      - ZOO_SERVERS=server.1=zookeeper:2888:3888;2181
      - ZOO_4LW_COMMANDS_WHITELIST=*
      - ZOOKEEPER_PRINCIPLE=${ZOOKEEPER_PRINCIPLE}
      - ZOOKEEPER_KRB_PASSWORD=${ZOOKEEPER_KRB_PASSWORD}
    volumes:
      - ./zookeeper/conf/jaas.conf:/conf/jaas.conf:ro
      - ./zookeeper/conf/zoo.cfg:/conf/zoo.cfg:ro
      - ./zookeeper/conf/java.env:/conf/java.env:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /data
      - /datalog

  accumulo-master:
    depends_on:
      hdfs-namenode:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    image: gchq/accumulo-krb:${ACCUMULO_VERSION}
    build:
      context: ./accumulo-krb
      args:
        BASE_IMAGE_NAME: gchq/accumulo
        BASE_IMAGE_TAG: ${ACCUMULO_VERSION}
    command: master
    restart: always
    container_name: accumulo-master
    hostname: accumulo-master.gaffer
    environment:
      - ACCUMULO_PRINCIPLE=${ACCUMULO_PRINCIPLE}
      - ACCUMULO_KRB_PASSWORD=${ACCUMULO_KRB_PASSWORD}
      - ACCUMULO_CONF_DIR=${ACCUMULO_CONF_DIR}
      - DEBUG=${DEBUG}
    volumes:
      - ./accumulo-krb/conf:${ACCUMULO_CONF_DIR}/generic:ro
      - ../accumulo/conf/monitor_logger.properties:${ACCUMULO_CONF_DIR}/monitor_logger.properties:ro
      - ../accumulo/conf/generic_logger.properties:${ACCUMULO_CONF_DIR}/generic_logger.properties:ro
      - ../accumulo/conf/log4j.properties:${ACCUMULO_CONF_DIR}/log4j.properties:ro
      - ../accumulo/conf/accumulo-env.sh:${ACCUMULO_CONF_DIR}/accumulo-env.sh:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/accumulo

  accumulo-tserver:
    depends_on:
      - accumulo-master
    image: gchq/accumulo-krb:${ACCUMULO_VERSION}
    build:
      context: ./accumulo-krb
      args:
        BASE_IMAGE_NAME: gchq/accumulo
        BASE_IMAGE_TAG: ${ACCUMULO_VERSION}
    command: tserver
    restart: always
    container_name: accumulo-tserver
    hostname: accumulo-tserver.gaffer
    environment:
      - ACCUMULO_PRINCIPLE=${ACCUMULO_PRINCIPLE}
      - ACCUMULO_KRB_PASSWORD=${ACCUMULO_KRB_PASSWORD}
      - ACCUMULO_CONF_DIR=${ACCUMULO_CONF_DIR}
      - DEBUG=${DEBUG}
    volumes:
      - ./accumulo-krb/conf:${ACCUMULO_CONF_DIR}/generic:ro
      - ../accumulo/conf/monitor_logger.properties:${ACCUMULO_CONF_DIR}/monitor_logger.properties:ro
      - ../accumulo/conf/generic_logger.properties:${ACCUMULO_CONF_DIR}/generic_logger.properties:ro
      - ../accumulo/conf/log4j.properties:${ACCUMULO_CONF_DIR}/log4j.properties:ro
      - ../accumulo/conf/accumulo-env.sh:${ACCUMULO_CONF_DIR}/accumulo-env.sh:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/accumulo

  accumulo-monitor:
    depends_on:
      - accumulo-master
    image: gchq/accumulo-krb:${ACCUMULO_VERSION}
    build:
      context: ./accumulo-krb
      args:
        BASE_IMAGE_NAME: gchq/accumulo
        BASE_IMAGE_TAG: ${ACCUMULO_VERSION}
    command: monitor
    restart: on-failure
    container_name: accumulo-monitor
    hostname: accumulo-monitor.gaffer
    environment:
      - ACCUMULO_PRINCIPLE=${ACCUMULO_PRINCIPLE}
      - ACCUMULO_KRB_PASSWORD=${ACCUMULO_KRB_PASSWORD}
      - ACCUMULO_CONF_DIR=${ACCUMULO_CONF_DIR}
      - DEBUG=${DEBUG}
    ports:
      - 9995:9995
    volumes:
      - ./accumulo-krb/conf:${ACCUMULO_CONF_DIR}/generic:ro
      - ../accumulo/conf/monitor_logger.properties:${ACCUMULO_CONF_DIR}/monitor_logger.properties:ro
      - ../accumulo/conf/generic_logger.properties:${ACCUMULO_CONF_DIR}/generic_logger.properties:ro
      - ../accumulo/conf/log4j.properties:${ACCUMULO_CONF_DIR}/log4j.properties:ro
      - ../accumulo/conf/accumulo-env.sh:${ACCUMULO_CONF_DIR}/accumulo-env.sh:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/accumulo

  accumulo-gc:
    depends_on:
      - accumulo-master
    image: gchq/gaffer-krb:${GAFFER_VERSION}
    build:
      context: ./accumulo-krb
      args:
        BASE_IMAGE_NAME: gchq/accumulo
        BASE_IMAGE_TAG: ${ACCUMULO_VERSION}
    command: gc
    restart: on-failure
    container_name: accumulo-gc
    hostname: accumulo-gc.gaffer
    environment:
      - ACCUMULO_PRINCIPLE=${ACCUMULO_PRINCIPLE}
      - ACCUMULO_KRB_PASSWORD=${ACCUMULO_KRB_PASSWORD}
      - ACCUMULO_CONF_DIR=${ACCUMULO_CONF_DIR}
      - DEBUG=${DEBUG}
    volumes:
      - ./accumulo-krb/conf:${ACCUMULO_CONF_DIR}/generic:ro
      - ../accumulo/conf/monitor_logger.properties:${ACCUMULO_CONF_DIR}/monitor_logger.properties:ro
      - ../accumulo/conf/generic_logger.properties:${ACCUMULO_CONF_DIR}/generic_logger.properties:ro
      - ../accumulo/conf/log4j.properties:${ACCUMULO_CONF_DIR}/log4j.properties:ro
      - ../accumulo/conf/accumulo-env.sh:${ACCUMULO_CONF_DIR}/accumulo-env.sh:ro
      - ./kdc/conf/krb5.conf:/etc/krb5.conf:ro
      - /var/log/accumulo
#
#  gaffer-rest:
#    image: gchq/gaffer-rest:${GAFFER_VERSION}
#    build:
#      context: ../gaffer-rest/
#      args:
#        GAFFER_VERSION: ${GAFFER_VERSION}
#    ports:
#      - 8080:8080
#    volumes:
#      - ./conf/store.properties:/gaffer/store/store.properties:ro
#
#  gaffer-ui:
#    image: gchq/gaffer-ui:${GAFFER_TOOLS_VERSION}
#    build:
#      context: ../gaffer-ui/
#      args:
#        GAFFER_TOOLS_VERSION: ${GAFFER_TOOLS_VERSION}
#    restart: always
#    ports:
#      - 5000:8080
#    volumes:
#      - ../gaffer-ui/config/ui/config.json:/opt/jboss/wildfly/standalone/deployments/ui.war/config/config.json:ro
