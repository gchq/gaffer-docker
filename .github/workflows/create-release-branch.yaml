# Copyright 2021-2023 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Create Release Branch

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Branch Version'
        required: false

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout develop
      uses: actions/checkout@v4
      with:
        ref: develop
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set version from input
      if: ${{ github.event.inputs.version }}
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.inputs.version }} | sed 's/^v//')" >> $GITHUB_ENV

    - name: Get latest tag
      if: ${{ !github.event.inputs.version }}
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag

    - name: Format latest tag
      if: ${{ !github.event.inputs.version }}
      run: echo "CURRENT_VERSION=$(echo ${{ steps.get-latest-tag.outputs.tag }} | sed 's/^v//')" >> $GITHUB_ENV

    - name: Bump latest tag variable version
      if: ${{ !github.event.inputs.version }}
      run: echo "RELEASE_VERSION=$(echo ${{ env.CURRENT_VERSION }} | sed -r 's/([0-9]+)\.([0-9]+)\.([0-9]+)/echo \1.$((\2+1)).0/' | sh)" >> $GITHUB_ENV

    - name: Verify version regex
      run: echo ${{ env.RELEASE_VERSION }} | grep -E '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

    - name: Set release branch
      run: echo "BRANCH_NAME=$(echo release/${{ env.RELEASE_VERSION }} )" >> $GITHUB_ENV

    - name: Set up Github credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Update versions
      run: ./cd/update_versions.sh ${RELEASE_VERSION}

    - name: Push to release branch
      run: |
        git checkout -b $BRANCH_NAME
        git commit -a -m "prepare release v${RELEASE_VERSION}" --allow-empty
        git push --set-upstream origin $BRANCH_NAME
